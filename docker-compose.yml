version: "3"
volumes:
  postgres-store:
  users-volume:
services:
  postgres:
    image: postgres:alpine
    container_name: postgres-book-store
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "BookStore@123"
    volumes:
      - "postgres-store:/var/lib/postgresql/data"
  consul:
    image: consul
    container_name: consul-book-store
    environment:
      CONSUL_BIND_INTERFACE: eth0
    ports:
      - 8500:8500
  users-migrations:
    build:
      context: ./users/src
      dockerfile: ./Users.Migrations/Dockerfile
    container_name: users-migrations-book-store
    environment:
      ConnectionString: "Server=postgres;Database=bookstoreuser;User Id=postgres;Password=BookStore@123;"
    volumes:
      - "users-volume:/var/output"
    entrypoint: /bin/sh -c "rm -f /var/output/migrator.txt && dockerize -wait tcp://postgres:5432 sh /docker-entrypoint.sh"
    depends_on:
      - postgres
  users:
    build: 
      context: ./users/src
      dockerfile: ./Users.Web/Dockerfile
    container_name: users-book-store
    entrypoint: /bin/sh -c "dockerize -wait file:///var/output/migrator.txt && dockerize -wait tcp://consul:8500 && dotnet /app/Users.Web.dll"
    environment:
       ASPNETCORE_ENVIRONMENT: "Development"
       ConnectionStrings__Postgres: "Server=postgres;Database=bookstoreuser;User Id=postgres;Password=BookStore@123;"
       Consul__Host: "consul"
    volumes:
      - "users-volume:/var/output"
    ports:
      - '5100:5100'
    depends_on:
      - postgres
      - users-migrations
      - consul