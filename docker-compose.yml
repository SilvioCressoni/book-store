version: "3"
volumes:
  postgres-store:
  users-volume:
  elastic-search-volume:
  kibana-volume:
services:
  postgres:
    image: postgres:alpine
    container_name: postgres-book-store
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "BookStore@123"
    volumes:
      - "postgres-store:/var/lib/postgresql/data"
  consul:
    image: consul
    container_name: consul-book-store
    environment:
      CONSUL_BIND_INTERFACE: eth0
    ports:
      - 8500:8500
  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    container_name: kibana-book-store
    environment: 
      ELASTICSEARCH_HOSTS: http://elastic-search:9200
    ports: 
      - 7000:5601
    depends_on: 
      - elastic-search
    volumes: 
      - "kibana-volume:/usr/share/kibana/"
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: elastic-search-book-store
    environment: 
      - discovery.type=single-node
    ports: 
      - 7200:9200
      - 7300:9300
    volumes: 
      - "elastic-search-volume:/usr/share/elasticsearch/data"
  users-migrations:
    build:
      context: ./users/src
      dockerfile: ./Users.Migrations/Dockerfile
    container_name: users-migrations-book-store
    environment:
      ConnectionString: "Server=postgres;Database=bookstoreuser;User Id=postgres;Password=BookStore@123;"
    volumes:
      - "users-volume:/var/output"
    entrypoint: /bin/sh -c "rm -f /var/output/migrator.txt && dockerize -wait tcp://postgres:5432 sh /docker-entrypoint.sh"
    depends_on:
      - postgres
  users:
    build: 
      context: ./users/src
      dockerfile: ./Users.Web/Dockerfile
    container_name: users-book-store
    entrypoint: /bin/sh -c "dockerize -wait file:///var/output/migrator.txt -timeout 100s && dockerize -wait tcp://consul:8500  -timeout 100s && dockerize -wait tcp://elastic-search:9200 -timeout 100s && dotnet /app/Users.Web.dll"
    environment:
       ASPNETCORE_ENVIRONMENT: "Development"
       ConnectionStrings__Postgres: "Server=postgres;Database=bookstoreuser;User Id=postgres;Password=BookStore@123;"
       Consul__Host: "consul"
       Consult__Discovery__Hostname: "users"
       Serilog__WriteTo__1__Args__nodeUris: http://elastic-search:9200
    volumes:
      - "users-volume:/var/output"
    ports:
      - '5100:5100'
    depends_on:
      - postgres
      - users-migrations
      - consul
      - elastic-search
  gateway-admin:
    build: 
      context: ./gateway/src
      dockerfile: ./Gateway.API.Admin.Web/Dockerfile
    container_name: gateway-admin-book-store
    entrypoint: /bin/sh -c "dockerize -wait tcp://consul:8500 -timeout 100s && dockerize -wait tcp://elastic-search:9200 -timeout 100s && dotnet /app/Gateway.API.Admin.Web.dll"
    environment:
        ASPNETCORE_ENVIRONMENT: "Development"
        Consul__Host: "consul"
        Consult__Discovery__Hostname: "gateway-admin"
        Serilog__WriteTo__1__Args__nodeUris: http://elastic-search:9200
        Services__0__Address: http://users/
    ports:
      - '5101:5101'
    depends_on:
      - consul
      - elastic-search